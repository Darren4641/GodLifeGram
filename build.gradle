plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.godlife'
version = '0.0.1'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot 기본 설정
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    implementation("org.springframework.boot:spring-boot-starter-validation")

    // Spring Boot Configuration Processor
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    // JDBC
    implementation("org.springframework.boot:spring-boot-starter-jdbc")

    // QueryDSL 설정 (Jakarta 버전)
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api:2.1.1'

    // MySQL Connector
    runtimeOnly("mysql:mysql-connector-java:8.0.33")

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    // BouncyCastle
    implementation 'org.bouncycastle:bcprov-jdk15on:1.70'
    implementation 'nl.martijndwars:web-push:5.1.0'

    // 비밀번호 해싱용 bcrypt
    implementation 'org.springframework.security:spring-security-crypto'

    // AWS S3
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.663'

    // Image resize
    implementation 'net.coobird:thumbnailator:0.4.19'

    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    implementation 'org.springframework.boot:spring-boot-starter'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}


def querydslDir = file("build/generated/sources/annotationProcessor/java/main")

sourceSets {
    main {
        java.srcDirs += querydslDir
    }
}

tasks.withType(JavaCompile).configureEach {
    options.generatedSourceOutputDirectory.set(querydslDir)
}